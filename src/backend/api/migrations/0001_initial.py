# Generated by Django 4.2.5 on 2023-10-16 11:15

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="MentorProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "telegram_id",
                    models.IntegerField(
                        blank=True,
                        help_text="На этот id в Telegram могут быть отправлены уведомления",
                        null=True,
                        verbose_name="Айди Telegram",
                    ),
                ),
            ],
            options={
                "verbose_name": "Профиль психолога",
                "verbose_name_plural": "Профили психологов",
            },
        ),
        migrations.CreateModel(
            name="Photo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file_id",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="После загрузки в telegram файлу будет присвоен file_id для повторной отправки.",
                        verbose_name="ID для telegram",
                    ),
                ),
                (
                    "image",
                    models.ImageField(upload_to="questions/", verbose_name="Картинка"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.TextField(
                        help_text="Значение, полученное в ходе расшифровки, которое используется как краткая запись результата. Например, ISTP.",
                        verbose_name="Ключ",
                    ),
                ),
                ("title", models.TextField(verbose_name="Заголовок")),
                (
                    "description",
                    models.TextField(blank=True, default="", verbose_name="Описание"),
                ),
            ],
            options={
                "verbose_name": "результат",
                "verbose_name_plural": "Результаты заданий",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "number",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Задание 1"),
                            (2, "Задание 2"),
                            (3, "Задание 3"),
                            (4, "Задание 4"),
                            (5, "Задание 5"),
                            (6, "Задание 6"),
                            (7, "Задание 7"),
                            (8, "Задание 8"),
                        ],
                        primary_key=True,
                        serialize=False,
                        verbose_name="Номер задания",
                    ),
                ),
                (
                    "end_question",
                    models.PositiveSmallIntegerField(
                        verbose_name="Последний номер задания"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserFromTelegram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "telegram_id",
                    models.PositiveBigIntegerField(
                        unique=True, verbose_name="Telegram ID"
                    ),
                ),
                (
                    "telegram_username",
                    models.CharField(max_length=32, verbose_name="Никнейм Telegram"),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Имя")),
                ("surname", models.CharField(max_length=150, verbose_name="Фамилия")),
                (
                    "mentor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.mentorprofile",
                        verbose_name="Психолог",
                    ),
                ),
            ],
            options={
                "verbose_name": "пользователя",
                "verbose_name_plural": "Пользователи из Telegram",
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="TaskStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_done",
                    models.BooleanField(default=False, verbose_name="Выполнено"),
                ),
                (
                    "pass_date",
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        default=None,
                        null=True,
                        verbose_name="Дата выполнения",
                    ),
                ),
                (
                    "current_question",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Текущий номер вопроса"
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.task",
                        verbose_name="Задание",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="api.userfromtelegram",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "статус",
                "verbose_name_plural": "Статусы заданий",
                "ordering": ("pk",),
                "unique_together": {("user", "task")},
            },
        ),
        migrations.CreateModel(
            name="ResultStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "top",
                    models.PositiveSmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(limit_value=1)
                        ],
                        verbose_name="Место в топе",
                    ),
                ),
                (
                    "score",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Баллы"),
                ),
                (
                    "result",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.result",
                        verbose_name="Результат",
                    ),
                ),
                (
                    "task_status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="result",
                        to="api.taskstatus",
                        verbose_name="Сводка",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="result",
            name="task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="results",
                to="api.task",
                verbose_name="Задание",
            ),
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(limit_value=1)
                        ],
                        verbose_name="Номер вопроса",
                    ),
                ),
                ("content", models.TextField(verbose_name="Текст вопроса")),
                (
                    "example",
                    models.TextField(
                        blank=True, default="", verbose_name="Пример ответа"
                    ),
                ),
                (
                    "photo",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="question",
                        to="api.photo",
                        verbose_name="Картинка",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="api.task",
                        verbose_name="Задание",
                    ),
                ),
            ],
            options={
                "verbose_name": "Вопрос",
                "verbose_name_plural": "Вопросы",
            },
        ),
        migrations.CreateModel(
            name="Problem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(verbose_name="Вопрос")),
                (
                    "answer",
                    models.TextField(
                        blank=True, default="", verbose_name="Ответ психолога"
                    ),
                ),
                (
                    "create_date",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="problems",
                        to="api.userfromtelegram",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "вопрос",
                "verbose_name_plural": "Вопросы от пользователей",
                "ordering": ("-pk",),
            },
        ),
        migrations.CreateModel(
            name="Choice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField(verbose_name="Заголовок")),
                (
                    "description",
                    models.TextField(blank=True, default="", verbose_name="Описание"),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="choices",
                        to="api.question",
                        verbose_name="Вопрос",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Ответ")),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="answers",
                        to="api.question",
                        verbose_name="Вопрос",
                    ),
                ),
                (
                    "task_status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="api.taskstatus",
                        verbose_name="Задание",
                    ),
                ),
            ],
            options={
                "verbose_name": "ответ",
                "verbose_name_plural": "Ответы на задания",
                "ordering": ("pk",),
            },
        ),
        migrations.AlterUniqueTogether(
            name="result",
            unique_together={("task", "key")},
        ),
        migrations.AddConstraint(
            model_name="question",
            constraint=models.UniqueConstraint(
                fields=("task", "number"), name="unique_task_question_number"
            ),
        ),
    ]
