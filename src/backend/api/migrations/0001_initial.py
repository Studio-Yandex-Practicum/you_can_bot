# Generated by Django 4.2.4 on 2023-08-17 10:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.PositiveIntegerField(
                        help_text="Введите номер ответа", verbose_name="Номер ответа"
                    ),
                ),
                (
                    "content",
                    models.CharField(
                        help_text="Введите содержание ответа",
                        max_length=10,
                        verbose_name="Содержание ответа",
                    ),
                ),
            ],
            options={
                "verbose_name": "ответ",
                "verbose_name_plural": "3. Ответы на задания",
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="Problem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        help_text="Введите вопрос", verbose_name="Содержание вопроса"
                    ),
                ),
                (
                    "answer",
                    models.TextField(
                        blank=True,
                        help_text="Введите ответ психолога",
                        verbose_name="Ответ психолога",
                    ),
                ),
            ],
            options={
                "verbose_name": "вопрос",
                "verbose_name_plural": "4. Вопросы от пользователей",
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="TaskStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.PositiveIntegerField(
                        help_text="Введите номер задания",
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Номер задания может принимать значения от 1 до 8."
                            ),
                            django.core.validators.MaxValueValidator(
                                8, "Номер задания может принимать значения от 1 до 8."
                            ),
                        ],
                        verbose_name="Номер задания",
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True,
                        help_text="Введите расшифровку",
                        verbose_name="Расшифровка",
                    ),
                ),
                (
                    "is_done",
                    models.BooleanField(
                        default=False, verbose_name="Статус выполнения"
                    ),
                ),
                (
                    "pass_date",
                    models.DateTimeField(
                        db_index=True, default=None, verbose_name="Дата выполнения"
                    ),
                ),
            ],
            options={
                "verbose_name": "статус",
                "verbose_name_plural": "2. Статусы заданий",
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="UserFromTelegram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "telegram_id",
                    models.PositiveBigIntegerField(
                        unique=True, verbose_name="Telegram ID"
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Имя")),
                ("surname", models.CharField(max_length=150, verbose_name="Фамилия")),
                (
                    "mentor",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Психолог"
                    ),
                ),
            ],
            options={
                "verbose_name": "пользователя",
                "verbose_name_plural": "1. Пользователи из Телеграма",
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="UserFromTelegramTaskStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        help_text="Введите ID решенного задания",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.taskstatus",
                        verbose_name="Решенное задание",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Введите ID пользователя",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.userfromtelegram",
                        verbose_name="Пользователь из Телеграма",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь, решивший задание",
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="UserFromTelegramProblem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "problem",
                    models.ForeignKey(
                        help_text="Введите ID проблемного вопроса",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.problem",
                        verbose_name="Проблемный вопрос",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Введите ID пользователя",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.userfromtelegram",
                        verbose_name="Пользователь из Телеграма",
                    ),
                ),
            ],
            options={
                "verbose_name": "пользователь, добавивший проблемный вопрос",
                "ordering": ("pk",),
            },
        ),
        migrations.AddField(
            model_name="userfromtelegram",
            name="problems",
            field=models.ManyToManyField(
                help_text="Введите вопросы от пользователя",
                related_name="telegram_user",
                through="api.UserFromTelegramProblem",
                to="api.problem",
                verbose_name="Вопросы от пользователя",
            ),
        ),
        migrations.AddField(
            model_name="userfromtelegram",
            name="tasks",
            field=models.ManyToManyField(
                help_text="Введите задания",
                related_name="telegram_user",
                through="api.UserFromTelegramTaskStatus",
                to="api.taskstatus",
                verbose_name="Задания, решенные пользователем",
            ),
        ),
        migrations.CreateModel(
            name="TaskStatusAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "answers",
                    models.ForeignKey(
                        help_text="Введите ID пула ответов",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.answer",
                        verbose_name="Номер пула ответов",
                    ),
                ),
                (
                    "task_status",
                    models.ForeignKey(
                        help_text="Введите номер задания",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.taskstatus",
                        verbose_name="Номер задания",
                    ),
                ),
            ],
            options={
                "verbose_name": "номер задания",
                "ordering": ("pk",),
            },
        ),
        migrations.AddField(
            model_name="taskstatus",
            name="answers",
            field=models.ManyToManyField(
                help_text="Введите ответы",
                related_name="task_status",
                through="api.TaskStatusAnswer",
                to="api.answer",
                verbose_name="Ответы пользователя",
            ),
        ),
    ]
