# Generated by Django 4.2.4 on 2023-08-18 14:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MentorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "telegram_username",
                    models.CharField(
                        help_text="На этот никнейм в Telegram могут быть отправлены уведомления",
                        max_length=32,
                        verbose_name="Никнейм Telegram",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Профиль",
            },
        ),
        migrations.CreateModel(
            name="UserFromTelegram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "telegram_id",
                    models.PositiveBigIntegerField(
                        unique=True, verbose_name="Telegram ID"
                    ),
                ),
                (
                    "telegram_username",
                    models.CharField(
                        max_length=32,
                        unique=True,
                        verbose_name="Никнейм Telegram",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Имя")),
                (
                    "surname",
                    models.CharField(max_length=150, verbose_name="Фамилия"),
                ),
                (
                    "mentor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.mentorprofile",
                        verbose_name="Психолог",
                    ),
                ),
            ],
            options={
                "verbose_name": "пользователя",
                "verbose_name_plural": "Пользователи из Telegram",
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="TaskStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Задание 1"),
                            (2, "Задание 2"),
                            (3, "Задание 3"),
                            (4, "Задание 4"),
                            (5, "Задание 5"),
                            (6, "Задание 6"),
                            (7, "Задание 7"),
                            (8, "Задание 8"),
                        ],
                        verbose_name="Номер задания",
                    ),
                ),
                (
                    "summary",
                    models.TextField(null=True, verbose_name="Расшифровка"),
                ),
                (
                    "is_done",
                    models.BooleanField(default=False, verbose_name="Выполнено"),
                ),
                (
                    "pass_date",
                    models.DateTimeField(
                        db_index=True,
                        default=None,
                        null=True,
                        verbose_name="Дата выполнения",
                    ),
                ),
                (
                    "current_question",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Текущий номер задания"
                    ),
                ),
                (
                    "end_question",
                    models.PositiveSmallIntegerField(
                        verbose_name="Последний номер задания"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="api.userfromtelegram",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "статус",
                "verbose_name_plural": "Статусы заданий",
                "ordering": ("pk",),
                "unique_together": {("user", "number")},
            },
        ),
        migrations.CreateModel(
            name="Problem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(verbose_name="Вопрос")),
                (
                    "answer",
                    models.TextField(null=True, verbose_name="Ответ психолога"),
                ),
                (
                    "create_date",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="problems",
                        to="api.userfromtelegram",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "вопрос",
                "verbose_name_plural": "Вопросы от пользователей",
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.PositiveSmallIntegerField(verbose_name="Номер вопроса"),
                ),
                ("content", models.TextField(verbose_name="Ответ")),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="api.taskstatus",
                        verbose_name="Задание",
                    ),
                ),
            ],
            options={
                "verbose_name": "ответ",
                "verbose_name_plural": "Ответы на задания",
                "ordering": ("pk",),
            },
        ),
    ]
